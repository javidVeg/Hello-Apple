{"ast":null,"code":"var _jsxFileName = \"/Users/testuser/Desktop/hello, apple_/Hello-Apple/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    product: '',\n    leakedInfo: '',\n    releaseDate: '',\n    tags: [],\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(leakedInfo => leakedInfo._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      product: '',\n      leakedInfo: '',\n      tags: [],\n      selectedFile: ''\n    });\n  };\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.product)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(postData);\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Log in or register in order to create a posting about an Apple product!\"));\n  }\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.product}\"` : 'Post a new product'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"product\",\n    variant: \"outlined\",\n    label: \"Product\",\n    fullWidth: true,\n    value: postData.product,\n    onChange: e => setPostData({ ...postData,\n      product: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"releaseDate\",\n    variant: \"outlined\",\n    label: \"Expected Release Date\",\n    fullWidth: true,\n    value: postData.releaseDate,\n    onChange: e => setPostData({ ...postData,\n      releaseDate: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"leakedInfo\",\n    variant: \"outlined\",\n    label: \"Leaked or New Information\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.leakedInfo,\n    onChange: e => setPostData({ ...postData,\n      leakedInfo: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '5px 0',\n      width: '94%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onAdd: chip => handleAddChip(chip),\n    onDelete: chip => handleDeleteChip(chip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/testuser/Desktop/hello, apple_/Hello-Apple/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","ChipInput","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","product","leakedInfo","releaseDate","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","console","log","name","result","paper","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","root","form","target","value","padding","width","chip","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ product: '', leakedInfo: '', releaseDate: '', tags: [], selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((leakedInfo) => leakedInfo._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ product: '', leakedInfo: '', tags: [], selectedFile: '' });\n  };\n\n  useEffect(() => {\n    if (!post?.product) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(postData)\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Log in or register in order to create a posting about an Apple product!\n        </Typography>\n      </Paper>\n    );\n  }\n\n  const handleAddChip = (tag) => {\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\n  };\n\n  const handleDeleteChip = (chipToDelete) => {\n    setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\n  };\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.product}\"` : 'Post a new product'}</Typography>\n        <TextField name=\"product\" variant=\"outlined\" label=\"Product\" fullWidth value={postData.product} onChange={(e) => setPostData({ ...postData, product: e.target.value })} />\n        <TextField name=\"releaseDate\" variant=\"outlined\" label=\"Expected Release Date\" fullWidth value={postData.releaseDate} onChange={(e) => setPostData({ ...postData, releaseDate: e.target.value })} />\n        <TextField name=\"leakedInfo\" variant=\"outlined\" label=\"Leaked or New Information\" fullWidth multiline rows={4} value={postData.leakedInfo} onChange={(e) => setPostData({ ...postData, leakedInfo: e.target.value })} />\n        <div style={{ padding: '5px 0', width: '94%' }}>\n          <ChipInput\n            name=\"tags\"\n            variant=\"outlined\"\n            label=\"Tags\"\n            fullWidth\n            value={postData.tags}\n            onAdd={(chip) => handleAddChip(chip)}\n            onDelete={(chip) => handleDeleteChip(chip)}\n          />\n        </div>\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"outlined\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n    \n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}